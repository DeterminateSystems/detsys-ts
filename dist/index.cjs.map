{"version":3,"sources":["../node_modules/.pnpm/@actions+io@1.1.3/node_modules/@actions/io/src/io-util.ts","../node_modules/.pnpm/@actions+io@1.1.3/node_modules/@actions/io/src/io.ts","../node_modules/.pnpm/@actions+exec@1.1.1/node_modules/@actions/exec/src/toolrunner.ts","../node_modules/.pnpm/@actions+exec@1.1.1/node_modules/@actions/exec/src/exec.ts","../node_modules/.pnpm/linux-release-info@3.0.0/node_modules/linux-release-info/src/index.ts","../src/index.ts","../package.json","../src/actions-core-platform.ts","../src/correlation.ts","../src/platform.ts","../src/inputs.ts","../src/sourcedef.ts"],"sourcesContent":[null,null,null,null,null,"/**\n * @packageDocumentation\n * Determinate Systems' TypeScript library for creating GitHub Actions logic.\n */\nimport { version as pkgVersion } from \"../package.json\";\nimport * as ghActionsCorePlatform from \"./actions-core-platform.js\";\nimport * as correlation from \"./correlation.js\";\nimport * as platform from \"./platform.js\";\nimport { SourceDef, constructSourceParameters } from \"./sourcedef.js\";\nimport * as actionsCache from \"@actions/cache\";\nimport * as actionsCore from \"@actions/core\";\nimport got, { Got } from \"got\";\nimport { UUID, randomUUID } from \"node:crypto\";\nimport { createWriteStream } from \"node:fs\";\nimport fs, { chmod, copyFile, mkdir } from \"node:fs/promises\";\nimport { tmpdir } from \"node:os\";\nimport * as path from \"node:path\";\nimport { pipeline } from \"node:stream/promises\";\n\nconst DEFAULT_IDS_HOST = \"https://install.determinate.systems\";\nconst IDS_HOST = process.env[\"IDS_HOST\"] ?? DEFAULT_IDS_HOST;\n\nconst EVENT_EXCEPTION = \"exception\";\nconst EVENT_ARTIFACT_CACHE_HIT = \"artifact_cache_hit\";\nconst EVENT_ARTIFACT_CACHE_MISS = \"artifact_cache_miss\";\n\nconst FACT_ENDED_WITH_EXCEPTION = \"ended_with_exception\";\nconst FACT_FINAL_EXCEPTION = \"final_exception\";\n\nexport type FetchSuffixStyle = \"nix-style\" | \"gh-env-style\" | \"universal\";\nexport type ExecutionPhase = \"main\" | \"post\";\nexport type NixRequirementHandling = \"fail\" | \"warn\" | \"ignore\";\n\nexport type ActionOptions = {\n  // Name of the project generally, and the name of the binary on disk.\n  name: string;\n\n  // Defaults to `name`, Corresponds to the ProjectHost entry on i.d.s.\n  idsProjectName?: string;\n\n  // Defaults to `action:`\n  eventPrefix?: string;\n\n  // The \"architecture\" URL component expected by I.D.S. for the ProjectHost.\n  fetchStyle: FetchSuffixStyle;\n\n  // IdsToolbox assumes the GitHub Action exposes source overrides, like branch/pr/etc. to be named `source-*`.\n  // This prefix adds a fallback name, prefixed by `${legacySourcePrefix}-`.\n  // Users who configure legacySourcePrefix will get warnings asking them to change to `source-*`.\n  legacySourcePrefix?: string;\n\n  // Check if Nix is installed before running this action.\n  // If Nix isn't installed, this action will not fail, and will instead do nothing.\n  // The action will emit a user-visible warning instructing them to install Nix.\n  requireNix: NixRequirementHandling;\n\n  // The URL to send diagnostics events to.\n  // Specifically:\n  //  * `undefined` -> Attempt to read the `diagnostic-enpdoint` action input, and calculate the default diagnostics URL for IDS from there.\n  //  * `null` -> Disable sending diagnostics altogether.\n  //  * URL(...) -> Send diagnostics to this other URL instead\n  diagnosticsUrl?: URL | null;\n};\n\n// A confident version of Options, where defaults have been resolved into final values\ntype ConfidentActionOptions = {\n  name: string;\n  idsProjectName: string;\n  eventPrefix: string;\n  fetchStyle: FetchSuffixStyle;\n  legacySourcePrefix?: string;\n  requireNix: NixRequirementHandling;\n  diagnosticsUrl?: URL;\n};\n\ntype DiagnosticEvent = {\n  event_name: string;\n  correlation: correlation.AnonymizedCorrelationHashes;\n  facts: Record<string, string | boolean>;\n  context: Record<string, unknown>;\n  timestamp: Date;\n  uuid: UUID;\n};\n\nexport class IdsToolbox {\n  private identity: correlation.AnonymizedCorrelationHashes;\n  private actionOptions: ConfidentActionOptions;\n  private archOs: string;\n  private nixSystem: string;\n  private architectureFetchSuffix: string;\n  private executionPhase: ExecutionPhase;\n  private sourceParameters: SourceDef;\n  private facts: Record<string, string | boolean>;\n  private events: DiagnosticEvent[];\n  private client: Got;\n\n  private hookMain?: () => Promise<void>;\n  private hookPost?: () => Promise<void>;\n\n  constructor(actionOptions: ActionOptions) {\n    this.actionOptions = makeOptionsConfident(actionOptions);\n    this.hookMain = undefined;\n    this.hookPost = undefined;\n\n    this.events = [];\n    this.client = got.extend({\n      retry: {\n        limit: 3,\n        methods: [\"GET\", \"HEAD\"],\n      },\n      hooks: {\n        beforeRetry: [\n          (error, retryCount) => {\n            actionsCore.info(\n              `Retrying after error ${error.code}, retry #: ${retryCount}`,\n            );\n          },\n        ],\n      },\n    });\n\n    this.facts = {\n      $lib: \"idslib\",\n      $lib_version: pkgVersion,\n      project: this.actionOptions.name,\n      ids_project: this.actionOptions.idsProjectName,\n    };\n\n    const params = [\n      [\"github_action_ref\", \"GITHUB_ACTION_REF\"],\n      [\"github_action_repository\", \"GITHUB_ACTION_REPOSITORY\"],\n      [\"github_event_name\", \"GITHUB_EVENT_NAME\"],\n      [\"$os\", \"RUNNER_OS\"],\n      [\"arch\", \"RUNNER_ARCH\"],\n    ];\n    for (const [target, env] of params) {\n      const value = process.env[env];\n      if (value) {\n        this.facts[target] = value;\n      }\n    }\n\n    this.identity = correlation.identify(this.actionOptions.name);\n    this.archOs = platform.getArchOs();\n    this.nixSystem = platform.getNixPlatform(this.archOs);\n\n    this.facts.arch_os = this.archOs;\n    this.facts.nix_system = this.nixSystem;\n\n    {\n      ghActionsCorePlatform\n        .getDetails()\n        // eslint-disable-next-line github/no-then\n        .then((details) => {\n          if (details.name !== \"unknown\") {\n            this.addFact(\"$os\", details.name);\n          }\n          if (details.version !== \"unknown\") {\n            this.addFact(\"$os_version\", details.version);\n          }\n        })\n        // eslint-disable-next-line github/no-then\n        .catch((e) => {\n          actionsCore.debug(`Failure getting platform details: ${e}`);\n        });\n    }\n\n    {\n      const phase = actionsCore.getState(\"idstoolbox_execution_phase\");\n      if (phase === \"\") {\n        actionsCore.saveState(\"idstoolbox_execution_phase\", \"post\");\n        this.executionPhase = \"main\";\n      } else {\n        this.executionPhase = \"post\";\n      }\n      this.facts.execution_phase = this.executionPhase;\n    }\n\n    if (this.actionOptions.fetchStyle === \"gh-env-style\") {\n      this.architectureFetchSuffix = this.archOs;\n    } else if (this.actionOptions.fetchStyle === \"nix-style\") {\n      this.architectureFetchSuffix = this.nixSystem;\n    } else if (this.actionOptions.fetchStyle === \"universal\") {\n      this.architectureFetchSuffix = \"universal\";\n    } else {\n      throw new Error(\n        `fetchStyle ${this.actionOptions.fetchStyle} is not a valid style`,\n      );\n    }\n\n    this.sourceParameters = constructSourceParameters(\n      this.actionOptions.legacySourcePrefix,\n    );\n\n    this.recordEvent(`begin_${this.executionPhase}`);\n  }\n\n  onMain(callback: () => Promise<void>): void {\n    this.hookMain = callback;\n  }\n\n  onPost(callback: () => Promise<void>): void {\n    this.hookPost = callback;\n  }\n\n  execute(): void {\n    // eslint-disable-next-line github/no-then\n    this.executeAsync().catch((error: Error) => {\n      // eslint-disable-next-line no-console\n      console.log(error);\n      process.exitCode = 1;\n    });\n  }\n\n  private async executeAsync(): Promise<void> {\n    try {\n      process.env.DETSYS_CORRELATION = JSON.stringify(\n        this.getCorrelationHashes(),\n      );\n\n      if (!(await this.preflightRequireNix())) {\n        this.recordEvent(\"preflight-require-nix-denied\");\n        return;\n      }\n\n      if (this.executionPhase === \"main\" && this.hookMain) {\n        await this.hookMain();\n      } else if (this.executionPhase === \"post\" && this.hookPost) {\n        await this.hookPost();\n      }\n      this.addFact(FACT_ENDED_WITH_EXCEPTION, false);\n    } catch (error) {\n      this.addFact(FACT_ENDED_WITH_EXCEPTION, true);\n\n      const reportable =\n        error instanceof Error || typeof error == \"string\"\n          ? error.toString()\n          : JSON.stringify(error);\n\n      this.addFact(FACT_FINAL_EXCEPTION, reportable);\n\n      if (this.executionPhase === \"post\") {\n        actionsCore.warning(reportable);\n      } else {\n        actionsCore.setFailed(reportable);\n      }\n\n      this.recordEvent(EVENT_EXCEPTION);\n    } finally {\n      await this.complete();\n    }\n  }\n\n  addFact(key: string, value: string | boolean): void {\n    this.facts[key] = value;\n  }\n\n  getDiagnosticsUrl(): URL | undefined {\n    return this.actionOptions.diagnosticsUrl;\n  }\n\n  getUniqueId(): string {\n    return (\n      this.identity.run_differentiator ||\n      process.env.RUNNER_TRACKING_ID ||\n      randomUUID()\n    );\n  }\n\n  getCorrelationHashes(): correlation.AnonymizedCorrelationHashes {\n    return this.identity;\n  }\n\n  recordEvent(eventName: string, context: Record<string, unknown> = {}): void {\n    this.events.push({\n      event_name: `${this.actionOptions.eventPrefix}${eventName}`,\n      context,\n      correlation: this.identity,\n      facts: this.facts,\n      timestamp: new Date(),\n      uuid: randomUUID(),\n    });\n  }\n\n  async fetch(): Promise<string> {\n    actionsCore.info(`Fetching from ${this.getUrl()}`);\n\n    const correlatedUrl = this.getUrl();\n    correlatedUrl.searchParams.set(\"ci\", \"github\");\n    correlatedUrl.searchParams.set(\n      \"correlation\",\n      JSON.stringify(this.identity),\n    );\n\n    const versionCheckup = await this.client.head(correlatedUrl);\n    if (versionCheckup.headers.etag) {\n      const v = versionCheckup.headers.etag;\n\n      actionsCore.debug(`Checking the tool cache for ${this.getUrl()} at ${v}`);\n      const cached = await this.getCachedVersion(v);\n      if (cached) {\n        this.facts[\"artifact_fetched_from_cache\"] = true;\n        actionsCore.debug(`Tool cache hit.`);\n        return cached;\n      }\n    }\n\n    this.facts[\"artifact_fetched_from_cache\"] = false;\n\n    actionsCore.debug(\n      `No match from the cache, re-fetching from the redirect: ${versionCheckup.url}`,\n    );\n\n    const destFile = this.getTemporaryName();\n    const fetchStream = this.client.stream(versionCheckup.url);\n\n    await pipeline(\n      fetchStream,\n      createWriteStream(destFile, {\n        encoding: \"binary\",\n        mode: 0o755,\n      }),\n    );\n\n    if (fetchStream.response?.headers.etag) {\n      const v = fetchStream.response.headers.etag;\n\n      try {\n        await this.saveCachedVersion(v, destFile);\n      } catch (e) {\n        actionsCore.debug(`Error caching the artifact: ${e}`);\n      }\n    }\n\n    return destFile;\n  }\n\n  async fetchExecutable(): Promise<string> {\n    const binaryPath = await this.fetch();\n    await chmod(binaryPath, fs.constants.S_IXUSR | fs.constants.S_IXGRP);\n    return binaryPath;\n  }\n\n  private async complete(): Promise<void> {\n    this.recordEvent(`complete_${this.executionPhase}`);\n    await this.submitEvents();\n  }\n\n  private getUrl(): URL {\n    const p = this.sourceParameters;\n\n    if (p.url) {\n      return new URL(p.url);\n    }\n\n    const fetchUrl = new URL(IDS_HOST);\n    fetchUrl.pathname += this.actionOptions.idsProjectName;\n\n    if (p.tag) {\n      fetchUrl.pathname += `/tag/${p.tag}`;\n    } else if (p.pr) {\n      fetchUrl.pathname += `/pr/${p.pr}`;\n    } else if (p.branch) {\n      fetchUrl.pathname += `/branch/${p.branch}`;\n    } else if (p.revision) {\n      fetchUrl.pathname += `/rev/${p.revision}`;\n    } else {\n      fetchUrl.pathname += `/stable`;\n    }\n\n    fetchUrl.pathname += `/${this.architectureFetchSuffix}`;\n\n    return fetchUrl;\n  }\n\n  private cacheKey(version: string): string {\n    const cleanedVersion = version.replace(/[^a-zA-Z0-9-+.]/g, \"\");\n    return `determinatesystem-${this.actionOptions.name}-${this.architectureFetchSuffix}-${cleanedVersion}`;\n  }\n\n  private async getCachedVersion(version: string): Promise<undefined | string> {\n    const startCwd = process.cwd();\n\n    try {\n      const tempDir = this.getTemporaryName();\n      await mkdir(tempDir);\n      process.chdir(tempDir);\n\n      // extremely evil shit right here:\n      process.env.GITHUB_WORKSPACE_BACKUP = process.env.GITHUB_WORKSPACE;\n      delete process.env.GITHUB_WORKSPACE;\n\n      if (\n        await actionsCache.restoreCache(\n          [this.actionOptions.name],\n          this.cacheKey(version),\n          [],\n          undefined,\n          true,\n        )\n      ) {\n        this.recordEvent(EVENT_ARTIFACT_CACHE_HIT);\n        return `${tempDir}/${this.actionOptions.name}`;\n      }\n\n      this.recordEvent(EVENT_ARTIFACT_CACHE_MISS);\n      return undefined;\n    } finally {\n      process.env.GITHUB_WORKSPACE = process.env.GITHUB_WORKSPACE_BACKUP;\n      delete process.env.GITHUB_WORKSPACE_BACKUP;\n      process.chdir(startCwd);\n    }\n  }\n\n  private async saveCachedVersion(\n    version: string,\n    toolPath: string,\n  ): Promise<void> {\n    const startCwd = process.cwd();\n\n    try {\n      const tempDir = this.getTemporaryName();\n      await mkdir(tempDir);\n      process.chdir(tempDir);\n      await copyFile(toolPath, `${tempDir}/${this.actionOptions.name}`);\n\n      // extremely evil shit right here:\n      process.env.GITHUB_WORKSPACE_BACKUP = process.env.GITHUB_WORKSPACE;\n      delete process.env.GITHUB_WORKSPACE;\n\n      await actionsCache.saveCache(\n        [this.actionOptions.name],\n        this.cacheKey(version),\n        undefined,\n        true,\n      );\n      this.recordEvent(EVENT_ARTIFACT_CACHE_HIT);\n    } finally {\n      process.env.GITHUB_WORKSPACE = process.env.GITHUB_WORKSPACE_BACKUP;\n      delete process.env.GITHUB_WORKSPACE_BACKUP;\n      process.chdir(startCwd);\n    }\n  }\n\n  private async preflightRequireNix(): Promise<boolean> {\n    let nixLocation: string | undefined;\n\n    const pathParts = (process.env[\"PATH\"] || \"\").split(\":\");\n    for (const location of pathParts) {\n      const candidateNix = path.join(location, \"nix\");\n\n      try {\n        await fs.access(candidateNix, fs.constants.X_OK);\n        actionsCore.debug(`Found Nix at ${candidateNix}`);\n        nixLocation = candidateNix;\n      } catch {\n        actionsCore.debug(`Nix not at ${candidateNix}`);\n      }\n    }\n    this.addFact(\"nix_location\", nixLocation || \"\");\n\n    if (this.actionOptions.requireNix === \"ignore\") {\n      return true;\n    }\n\n    const currentNotFoundState = actionsCore.getState(\n      \"idstoolbox_nix_not_found\",\n    );\n    if (currentNotFoundState === \"not-found\") {\n      // It was previously not found, so don't run subsequent actions\n      return false;\n    }\n\n    if (nixLocation !== undefined) {\n      return true;\n    }\n    actionsCore.saveState(\"idstoolbox_nix_not_found\", \"not-found\");\n\n    switch (this.actionOptions.requireNix) {\n      case \"fail\":\n        actionsCore.setFailed(\n          \"This action can only be used when Nix is installed.\" +\n            \" Add `- uses: DeterminateSystems/nix-installer-action@main` earlier in your workflow.\",\n        );\n        break;\n      case \"warn\":\n        actionsCore.warning(\n          \"This action is in no-op mode because Nix is not installed.\" +\n            \" Add `- uses: DeterminateSystems/nix-installer-action@main` earlier in your workflow.\",\n        );\n        break;\n    }\n\n    return false;\n  }\n\n  private async submitEvents(): Promise<void> {\n    if (!this.actionOptions.diagnosticsUrl) {\n      actionsCore.debug(\n        \"Diagnostics are disabled. Not sending the following events:\",\n      );\n      actionsCore.debug(JSON.stringify(this.events, undefined, 2));\n      return;\n    }\n\n    const batch = {\n      type: \"eventlog\",\n      sent_at: new Date(),\n      events: this.events,\n    };\n\n    try {\n      await this.client.post(this.actionOptions.diagnosticsUrl, {\n        json: batch,\n      });\n    } catch (error) {\n      actionsCore.debug(`Error submitting diagnostics event: ${error}`);\n    }\n    this.events = [];\n  }\n\n  private getTemporaryName(): string {\n    const _tmpdir = process.env[\"RUNNER_TEMP\"] || tmpdir();\n    return path.join(_tmpdir, `${this.actionOptions.name}-${randomUUID()}`);\n  }\n}\n\nfunction makeOptionsConfident(\n  actionOptions: ActionOptions,\n): ConfidentActionOptions {\n  const idsProjectName = actionOptions.idsProjectName ?? actionOptions.name;\n\n  const finalOpts: ConfidentActionOptions = {\n    name: actionOptions.name,\n    idsProjectName,\n    eventPrefix: actionOptions.eventPrefix || \"action:\",\n    fetchStyle: actionOptions.fetchStyle,\n    legacySourcePrefix: actionOptions.legacySourcePrefix,\n    requireNix: actionOptions.requireNix,\n    diagnosticsUrl: determineDiagnosticsUrl(\n      idsProjectName,\n      actionOptions.diagnosticsUrl,\n    ),\n  };\n\n  actionsCore.debug(\"idslib options:\");\n  actionsCore.debug(JSON.stringify(finalOpts, undefined, 2));\n\n  return finalOpts;\n}\n\nfunction determineDiagnosticsUrl(\n  idsProjectName: string,\n  urlOption?: URL | null,\n): undefined | URL {\n  if (urlOption === null) {\n    // Disable diagnostict events\n    return undefined;\n  }\n\n  if (urlOption !== undefined) {\n    // Caller specified a specific diagnostics URL\n    return urlOption;\n  }\n\n  {\n    // Attempt to use the action input's diagnostic-endpoint option.\n\n    // Note: we don't use actionsCore.getInput('diagnostic-endpoint') on purpose:\n    // getInput silently converts absent data to an empty string.\n    const providedDiagnosticEndpoint = process.env[\"INPUT_DIAGNOSTIC-ENDPOINT\"];\n    if (providedDiagnosticEndpoint === \"\") {\n      // User probably explicitly turned it off\n      return undefined;\n    }\n\n    if (providedDiagnosticEndpoint !== undefined) {\n      try {\n        return mungeDiagnosticEndpoint(new URL(providedDiagnosticEndpoint));\n      } catch (e) {\n        actionsCore.info(\n          `User-provided diagnostic endpoint ignored: not a valid URL: ${e}`,\n        );\n      }\n    }\n  }\n\n  try {\n    const diagnosticUrl = new URL(IDS_HOST);\n    diagnosticUrl.pathname += idsProjectName;\n    diagnosticUrl.pathname += \"/diagnostics\";\n    return diagnosticUrl;\n  } catch (e) {\n    actionsCore.info(\n      `Generated diagnostic endpoint ignored: not a valid URL: ${e}`,\n    );\n  }\n\n  return undefined;\n}\n\nfunction mungeDiagnosticEndpoint(inputUrl: URL): URL {\n  if (DEFAULT_IDS_HOST === IDS_HOST) {\n    return inputUrl;\n  }\n\n  try {\n    const defaultIdsHost = new URL(DEFAULT_IDS_HOST);\n    const currentIdsHost = new URL(IDS_HOST);\n\n    if (inputUrl.origin !== defaultIdsHost.origin) {\n      return inputUrl;\n    }\n\n    inputUrl.protocol = currentIdsHost.protocol;\n    inputUrl.host = currentIdsHost.host;\n    inputUrl.username = currentIdsHost.username;\n    inputUrl.password = currentIdsHost.password;\n\n    return inputUrl;\n  } catch (e) {\n    actionsCore.info(`Default or overridden IDS host isn't a valid URL: ${e}`);\n  }\n\n  return inputUrl;\n}\n\n// Public exports from other files\nexport * as inputs from \"./inputs.js\";\nexport * as platform from \"./platform.js\";\n","{\n  \"name\": \"detsys-ts\",\n  \"version\": \"1.0.0\",\n  \"description\": \"TypeScript goodies for DetSys projects\",\n  \"main\": \"./dist/index.js\",\n  \"types\": \"./dist/index.d.ts\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"build\": \"tsup\",\n    \"check-fmt\": \"prettier --check .\",\n    \"format\": \"prettier --write .\",\n    \"lint\": \"eslint src/**/*.ts\",\n    \"docs\": \"typedoc src/index.ts\",\n    \"all\": \"rm -rf dist && pnpm run format && pnpm run lint && pnpm run build\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/DeterminateSystems/detsys-ts.git\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/DeterminateSystems/detsys-ts/issues\"\n  },\n  \"homepage\": \"https://github.com/DeterminateSystems/detsys-ts#readme\",\n  \"dependencies\": {\n    \"@actions/cache\": \"^3.2.4\",\n    \"@actions/core\": \"^1.10.1\",\n    \"got\": \"^14.2.1\"\n  },\n  \"devDependencies\": {\n    \"@actions/exec\": \"^1.1.1\",\n    \"@trivago/prettier-plugin-sort-imports\": \"^4.3.0\",\n    \"@types/node\": \"^20.12.7\",\n    \"@typescript-eslint/eslint-plugin\": \"^7.6.0\",\n    \"eslint\": \"^8.57.0\",\n    \"eslint-import-resolver-typescript\": \"^3.6.1\",\n    \"eslint-plugin-github\": \"^4.10.2\",\n    \"eslint-plugin-import\": \"^2.29.1\",\n    \"eslint-plugin-prettier\": \"^5.1.3\",\n    \"linux-release-info\": \"^3.0.0\",\n    \"prettier\": \"^3.2.5\",\n    \"tsup\": \"^8.0.2\",\n    \"typedoc\": \"^0.25.13\",\n    \"typescript\": \"^5.4.5\"\n  }\n}\n","// MIT, mostly lifted from https://github.com/actions/toolkit/blob/5a736647a123ecf8582376bdaee833fbae5b3847/packages/core/src/platform.ts\n// since it isn't in @actions/core 1.10.1 which is their current release as 2024-04-19.\n// Changes: Replaced the lsb_release call in Linux with `linux-release-info` to parse the os-release file directly.\nimport * as core from \"@actions/core\";\nimport * as exec from \"@actions/exec\";\nimport { releaseInfo } from \"linux-release-info\";\nimport os from \"os\";\n\nconst getWindowsInfo = async (): Promise<{ name: string; version: string }> => {\n  const { stdout: version } = await exec.getExecOutput(\n    'powershell -command \"(Get-CimInstance -ClassName Win32_OperatingSystem).Version\"',\n    undefined,\n    {\n      silent: true,\n    },\n  );\n\n  const { stdout: name } = await exec.getExecOutput(\n    'powershell -command \"(Get-CimInstance -ClassName Win32_OperatingSystem).Caption\"',\n    undefined,\n    {\n      silent: true,\n    },\n  );\n\n  return {\n    name: name.trim(),\n    version: version.trim(),\n  };\n};\n\nconst getMacOsInfo = async (): Promise<{\n  name: string;\n  version: string;\n}> => {\n  const { stdout } = await exec.getExecOutput(\"sw_vers\", undefined, {\n    silent: true,\n  });\n\n  const version = stdout.match(/ProductVersion:\\s*(.+)/)?.[1] ?? \"\";\n  const name = stdout.match(/ProductName:\\s*(.+)/)?.[1] ?? \"\";\n\n  return {\n    name,\n    version,\n  };\n};\n\nfunction getPropertyViaWithDefault<T, Property extends string>(\n  data: object,\n  names: Property[],\n  defaultValue: T,\n): T {\n  for (const name of names) {\n    const ret: T = getPropertyWithDefault(data, name, defaultValue);\n\n    if (ret !== defaultValue) {\n      return ret;\n    }\n  }\n\n  return defaultValue;\n}\n\nfunction getPropertyWithDefault<T, Property extends string>(\n  data: object,\n  name: Property,\n  defaultValue: T,\n): T {\n  if (!data.hasOwnProperty(name)) {\n    return defaultValue;\n  }\n\n  const value = (data as { [K in Property]: T })[name];\n\n  // NB. this check won't work for object instances\n  if (typeof value !== typeof defaultValue) {\n    return defaultValue;\n  }\n\n  return value;\n}\n\nconst getLinuxInfo = async (): Promise<{\n  name: string;\n  version: string;\n}> => {\n  let data: object = {};\n\n  try {\n    data = releaseInfo({ mode: \"sync\" });\n    // eslint-disable-next-line no-console\n    console.log(data);\n  } catch (e) {\n    core.debug(`Error collecting release info: ${e}`);\n  }\n\n  return {\n    name: getPropertyViaWithDefault(\n      data,\n      [\"id\", \"name\", \"pretty_name\", \"id_like\"],\n      \"unknown\",\n    ),\n    version: getPropertyViaWithDefault(\n      data,\n      [\"version_id\", \"version\", \"version_codename\"],\n      \"unknown\",\n    ),\n  };\n};\n\nexport const platform = os.platform();\nexport const arch = os.arch();\nexport const isWindows = platform === \"win32\";\nexport const isMacOS = platform === \"darwin\";\nexport const isLinux = platform === \"linux\";\n\nexport async function getDetails(): Promise<{\n  name: string;\n  platform: string;\n  arch: string;\n  version: string;\n  isWindows: boolean;\n  isMacOS: boolean;\n  isLinux: boolean;\n}> {\n  return {\n    ...(await (isWindows\n      ? getWindowsInfo()\n      : isMacOS\n        ? getMacOsInfo()\n        : getLinuxInfo())),\n    platform,\n    arch,\n    isWindows,\n    isMacOS,\n    isLinux,\n  };\n}\n","import * as actionsCore from \"@actions/core\";\nimport { createHash } from \"node:crypto\";\n\nconst OPTIONAL_VARIABLES = [\"INVOCATION_ID\"];\n\nexport type AnonymizedCorrelationHashes = {\n  correlation_source: string;\n  repository?: string;\n  run?: string;\n  run_differentiator?: string;\n  workflow?: string;\n  groups: Record<string, string | undefined>;\n};\n\nexport function identify(projectName: string): AnonymizedCorrelationHashes {\n  const ident = {\n    correlation_source: \"github-actions\",\n\n    repository: hashEnvironmentVariables(\"GHR\", [\n      \"GITHUB_SERVER_URL\",\n      \"GITHUB_REPOSITORY_OWNER\",\n      \"GITHUB_REPOSITORY_OWNER_ID\",\n      \"GITHUB_REPOSITORY\",\n      \"GITHUB_REPOSITORY_ID\",\n    ]),\n    workflow: hashEnvironmentVariables(\"GHW\", [\n      \"GITHUB_SERVER_URL\",\n      \"GITHUB_REPOSITORY_OWNER\",\n      \"GITHUB_REPOSITORY_OWNER_ID\",\n      \"GITHUB_REPOSITORY\",\n      \"GITHUB_REPOSITORY_ID\",\n      \"GITHUB_WORKFLOW\",\n    ]),\n    job: hashEnvironmentVariables(\"GHWJ\", [\n      \"GITHUB_SERVER_URL\",\n      \"GITHUB_REPOSITORY_OWNER\",\n      \"GITHUB_REPOSITORY_OWNER_ID\",\n      \"GITHUB_REPOSITORY\",\n      \"GITHUB_REPOSITORY_ID\",\n      \"GITHUB_WORKFLOW\",\n      \"GITHUB_JOB\",\n    ]),\n    run: hashEnvironmentVariables(\"GHWJR\", [\n      \"GITHUB_SERVER_URL\",\n      \"GITHUB_REPOSITORY_OWNER\",\n      \"GITHUB_REPOSITORY_OWNER_ID\",\n      \"GITHUB_REPOSITORY\",\n      \"GITHUB_REPOSITORY_ID\",\n      \"GITHUB_WORKFLOW\",\n      \"GITHUB_JOB\",\n      \"GITHUB_RUN_ID\",\n    ]),\n    run_differentiator: hashEnvironmentVariables(\"GHWJA\", [\n      \"GITHUB_SERVER_URL\",\n      \"GITHUB_REPOSITORY_OWNER\",\n      \"GITHUB_REPOSITORY_OWNER_ID\",\n      \"GITHUB_REPOSITORY\",\n      \"GITHUB_REPOSITORY_ID\",\n      \"GITHUB_WORKFLOW\",\n      \"GITHUB_JOB\",\n      \"GITHUB_RUN_ID\",\n      \"GITHUB_RUN_NUMBER\",\n      \"GITHUB_RUN_ATTEMPT\",\n      \"INVOCATION_ID\",\n    ]),\n    groups: {\n      ci: \"github-actions\",\n      project: projectName,\n      github_organization: hashEnvironmentVariables(\"GHO\", [\n        \"GITHUB_SERVER_URL\",\n        \"GITHUB_REPOSITORY_OWNER\",\n        \"GITHUB_REPOSITORY_OWNER_ID\",\n      ]),\n    },\n  };\n\n  actionsCore.debug(\"Correlation data:\");\n  actionsCore.debug(JSON.stringify(ident, null, 2));\n\n  return ident;\n}\n\nfunction hashEnvironmentVariables(\n  prefix: string,\n  variables: string[],\n): undefined | string {\n  const hash = createHash(\"sha256\");\n\n  for (const varName of variables) {\n    let value = process.env[varName];\n\n    if (value === undefined) {\n      if (OPTIONAL_VARIABLES.includes(varName)) {\n        actionsCore.debug(\n          `Optional environment variable not set: ${varName} -- substituting with the variable name`,\n        );\n        value = varName;\n      } else {\n        actionsCore.debug(\n          `Environment variable not set: ${varName} -- can't generate the requested identity`,\n        );\n        return undefined;\n      }\n    }\n\n    hash.update(value);\n    hash.update(\"\\0\");\n  }\n\n  return `${prefix}-${hash.digest(\"hex\")}`;\n}\n","/**\n * @packageDocumentation\n * Helpers for determining system attributes of the current runner.\n */\nimport * as actionsCore from \"@actions/core\";\n\n/**\n * Get the current architecture plus OS. Examples include `X64-Linux` and `ARM64-macOS`.\n */\nexport function getArchOs(): string {\n  const envArch = process.env.RUNNER_ARCH;\n  const envOs = process.env.RUNNER_OS;\n\n  if (envArch && envOs) {\n    return `${envArch}-${envOs}`;\n  } else {\n    actionsCore.error(\n      `Can't identify the platform: RUNNER_ARCH or RUNNER_OS undefined (${envArch}-${envOs})`,\n    );\n    throw new Error(\"RUNNER_ARCH and/or RUNNER_OS is not defined\");\n  }\n}\n\n/**\n * Get the current Nix system. Examples include `x86_64-linux` and `aarch64-darwin`.\n */\nexport function getNixPlatform(archOs: string): string {\n  const archOsMap: Map<string, string> = new Map([\n    [\"X64-macOS\", \"x86_64-darwin\"],\n    [\"ARM64-macOS\", \"aarch64-darwin\"],\n    [\"X64-Linux\", \"x86_64-linux\"],\n    [\"ARM64-Linux\", \"aarch64-linux\"],\n  ]);\n\n  const mappedTo = archOsMap.get(archOs);\n  if (mappedTo) {\n    return mappedTo;\n  } else {\n    actionsCore.error(\n      `ArchOs (${archOs}) doesn't map to a supported Nix platform.`,\n    );\n    throw new Error(\n      `Cannot convert ArchOs (${archOs}) to a supported Nix platform.`,\n    );\n  }\n}\n","/**\n * @packageDocumentation\n * Helpers for getting values from an Action's configuration.\n */\nimport * as actionsCore from \"@actions/core\";\n\n/**\n * Get a Boolean input from the Action's configuration by name.\n */\nconst getBool = (name: string): boolean => {\n  return actionsCore.getBooleanInput(name);\n};\n\n/**\n * Get a multi-line string input from the Action's configuration by name or return `null` if not set.\n */\nconst getMultilineStringOrNull = (name: string): string[] | null => {\n  const value = actionsCore.getMultilineInput(name);\n  if (value.length === 0) {\n    return null;\n  } else {\n    return value;\n  }\n};\n\n/**\n * Get a number input from the Action's configuration by name or return `null` if not set.\n */\nconst getNumberOrNull = (name: string): number | null => {\n  const value = actionsCore.getInput(name);\n  if (value === \"\") {\n    return null;\n  } else {\n    return Number(value);\n  }\n};\n\n/**\n * Get a string input from the Action's configuration.\n */\nconst getString = (name: string): string => {\n  return actionsCore.getInput(name);\n};\n\n/**\n * Get a string input from the Action's configuration by name or return `null` if not set.\n */\nconst getStringOrNull = (name: string): string | null => {\n  const value = actionsCore.getInput(name);\n  if (value === \"\") {\n    return null;\n  } else {\n    return value;\n  }\n};\n\n/**\n * Get a string input from the Action's configuration by name or return `undefined` if not set.\n */\nconst getStringOrUndefined = (name: string): string | undefined => {\n  const value = actionsCore.getInput(name);\n  if (value === \"\") {\n    return undefined;\n  } else {\n    return value;\n  }\n};\n\nexport {\n  getBool,\n  getMultilineStringOrNull,\n  getNumberOrNull,\n  getString,\n  getStringOrNull,\n  getStringOrUndefined,\n};\n","import { getStringOrUndefined } from \"./inputs.js\";\nimport * as actionsCore from \"@actions/core\";\n\nexport type SourceDef = {\n  path?: string;\n  url?: string;\n  tag?: string;\n  pr?: string;\n  branch?: string;\n  revision?: string;\n};\n\nexport function constructSourceParameters(legacyPrefix?: string): SourceDef {\n  const noisilyGetInput = (suffix: string): string | undefined => {\n    const preferredInput = getStringOrUndefined(`source-${suffix}`);\n\n    if (!legacyPrefix) {\n      return preferredInput;\n    }\n\n    // Remaining is for handling cases where the legacy prefix\n    // should be examined.\n    const legacyInput = getStringOrUndefined(`${legacyPrefix}-${suffix}`);\n\n    if (preferredInput && legacyInput) {\n      actionsCore.warning(\n        `The supported option source-${suffix} and the legacy option ${legacyPrefix}-${suffix} are both set. Preferring source-${suffix}. Please stop setting ${legacyPrefix}-${suffix}.`,\n      );\n      return preferredInput;\n    } else if (legacyInput) {\n      actionsCore.warning(\n        `The legacy option ${legacyPrefix}-${suffix} is set. Please migrate to source-${suffix}.`,\n      );\n      return legacyInput;\n    } else {\n      return preferredInput;\n    }\n  };\n\n  return {\n    path: noisilyGetInput(\"path\"),\n    url: noisilyGetInput(\"url\"),\n    tag: noisilyGetInput(\"tag\"),\n    pr: noisilyGetInput(\"pr\"),\n    branch: noisilyGetInput(\"branch\"),\n    revision: noisilyGetInput(\"revision\"),\n  };\n}\n"],"mappings":"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","names":["fs","path","exports","_a","path","copyFile","exports","os","path","error","exports","exec","exports","getExecOutput","fs","os","releaseInfo","searchOsreleaseFileList","options","error","exports","version","os","actionsCore","actionsCore","actionsCore","actionsCore","import_node_crypto","import_promises","got","error","fs","version"]}