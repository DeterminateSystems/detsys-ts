{"version":3,"sources":["../src/index.ts"],"sourcesContent":["/**\n * @packageDocumentation\n * Determinate Systems' TypeScript library for creating GitHub Actions logic.\n */\nimport { version as pkgVersion } from \"../package.json\";\nimport * as ghActionsCorePlatform from \"./actions-core-platform.js\";\nimport * as correlation from \"./correlation.js\";\nimport * as platform from \"./platform.js\";\nimport { SourceDef, constructSourceParameters } from \"./sourcedef.js\";\nimport * as actionsCache from \"@actions/cache\";\nimport * as actionsCore from \"@actions/core\";\nimport got, { Got } from \"got\";\nimport { UUID, randomUUID } from \"node:crypto\";\nimport { createWriteStream } from \"node:fs\";\nimport fs, { chmod, copyFile, mkdir } from \"node:fs/promises\";\nimport { tmpdir } from \"node:os\";\nimport * as path from \"node:path\";\nimport { pipeline } from \"node:stream/promises\";\n\nconst DEFAULT_IDS_HOST = \"https://install.determinate.systems\";\nconst IDS_HOST = process.env[\"IDS_HOST\"] ?? DEFAULT_IDS_HOST;\n\nconst EVENT_EXCEPTION = \"exception\";\nconst EVENT_ARTIFACT_CACHE_HIT = \"artifact_cache_hit\";\nconst EVENT_ARTIFACT_CACHE_MISS = \"artifact_cache_miss\";\n\nconst FACT_ENDED_WITH_EXCEPTION = \"ended_with_exception\";\nconst FACT_FINAL_EXCEPTION = \"final_exception\";\n\nexport type FetchSuffixStyle = \"nix-style\" | \"gh-env-style\" | \"universal\";\nexport type ExecutionPhase = \"main\" | \"post\";\nexport type NixRequirementHandling = \"fail\" | \"warn\" | \"ignore\";\n\nexport type ActionOptions = {\n  // Name of the project generally, and the name of the binary on disk.\n  name: string;\n\n  // Defaults to `name`, Corresponds to the ProjectHost entry on i.d.s.\n  idsProjectName?: string;\n\n  // Defaults to `action:`\n  eventPrefix?: string;\n\n  // The \"architecture\" URL component expected by I.D.S. for the ProjectHost.\n  fetchStyle: FetchSuffixStyle;\n\n  // IdsToolbox assumes the GitHub Action exposes source overrides, like branch/pr/etc. to be named `source-*`.\n  // This prefix adds a fallback name, prefixed by `${legacySourcePrefix}-`.\n  // Users who configure legacySourcePrefix will get warnings asking them to change to `source-*`.\n  legacySourcePrefix?: string;\n\n  // Check if Nix is installed before running this action.\n  // If Nix isn't installed, this action will not fail, and will instead do nothing.\n  // The action will emit a user-visible warning instructing them to install Nix.\n  requireNix: NixRequirementHandling;\n\n  // The URL to send diagnostics events to.\n  // Specifically:\n  //  * `undefined` -> Attempt to read the `diagnostic-enpdoint` action input, and calculate the default diagnostics URL for IDS from there.\n  //  * `null` -> Disable sending diagnostics altogether.\n  //  * URL(...) -> Send diagnostics to this other URL instead\n  diagnosticsUrl?: URL | null;\n};\n\n// A confident version of Options, where defaults have been resolved into final values\ntype ConfidentActionOptions = {\n  name: string;\n  idsProjectName: string;\n  eventPrefix: string;\n  fetchStyle: FetchSuffixStyle;\n  legacySourcePrefix?: string;\n  requireNix: NixRequirementHandling;\n  diagnosticsUrl?: URL;\n};\n\ntype DiagnosticEvent = {\n  event_name: string;\n  correlation: correlation.AnonymizedCorrelationHashes;\n  facts: Record<string, string | boolean>;\n  context: Record<string, unknown>;\n  timestamp: Date;\n  uuid: UUID;\n};\n\nexport class IdsToolbox {\n  private identity: correlation.AnonymizedCorrelationHashes;\n  private actionOptions: ConfidentActionOptions;\n  private archOs: string;\n  private nixSystem: string;\n  private architectureFetchSuffix: string;\n  private executionPhase: ExecutionPhase;\n  private sourceParameters: SourceDef;\n  private facts: Record<string, string | boolean>;\n  private events: DiagnosticEvent[];\n  private client: Got;\n\n  private hookMain?: () => Promise<void>;\n  private hookPost?: () => Promise<void>;\n\n  constructor(actionOptions: ActionOptions) {\n    this.actionOptions = makeOptionsConfident(actionOptions);\n    this.hookMain = undefined;\n    this.hookPost = undefined;\n\n    this.events = [];\n    this.client = got.extend({\n      retry: {\n        limit: 3,\n        methods: [\"GET\", \"HEAD\"],\n      },\n      hooks: {\n        beforeRetry: [\n          (error, retryCount) => {\n            actionsCore.info(\n              `Retrying after error ${error.code}, retry #: ${retryCount}`,\n            );\n          },\n        ],\n      },\n    });\n\n    // JSON sent to server\n    /* eslint-disable camelcase */\n    this.facts = {\n      $lib: \"idslib\",\n      $lib_version: pkgVersion,\n      project: this.actionOptions.name,\n      ids_project: this.actionOptions.idsProjectName,\n    };\n\n    const params = [\n      [\"github_action_ref\", \"GITHUB_ACTION_REF\"],\n      [\"github_action_repository\", \"GITHUB_ACTION_REPOSITORY\"],\n      [\"github_event_name\", \"GITHUB_EVENT_NAME\"],\n      [\"$os\", \"RUNNER_OS\"],\n      [\"arch\", \"RUNNER_ARCH\"],\n    ];\n    for (const [target, env] of params) {\n      const value = process.env[env];\n      if (value) {\n        this.facts[target] = value;\n      }\n    }\n\n    this.identity = correlation.identify(this.actionOptions.name);\n    this.archOs = platform.getArchOs();\n    this.nixSystem = platform.getNixPlatform(this.archOs);\n\n    this.facts.arch_os = this.archOs;\n    this.facts.nix_system = this.nixSystem;\n\n    {\n      ghActionsCorePlatform\n        .getDetails()\n        // eslint-disable-next-line github/no-then\n        .then((details) => {\n          if (details.name !== \"unknown\") {\n            this.addFact(\"$os\", details.name);\n          }\n          if (details.version !== \"unknown\") {\n            this.addFact(\"$os_version\", details.version);\n          }\n        })\n        // eslint-disable-next-line github/no-then\n        .catch((e) => {\n          actionsCore.debug(`Failure getting platform details: ${e}`);\n        });\n    }\n\n    {\n      const phase = actionsCore.getState(\"idstoolbox_execution_phase\");\n      if (phase === \"\") {\n        actionsCore.saveState(\"idstoolbox_execution_phase\", \"post\");\n        this.executionPhase = \"main\";\n      } else {\n        this.executionPhase = \"post\";\n      }\n      this.facts.execution_phase = this.executionPhase;\n    }\n\n    if (this.actionOptions.fetchStyle === \"gh-env-style\") {\n      this.architectureFetchSuffix = this.archOs;\n    } else if (this.actionOptions.fetchStyle === \"nix-style\") {\n      this.architectureFetchSuffix = this.nixSystem;\n    } else if (this.actionOptions.fetchStyle === \"universal\") {\n      this.architectureFetchSuffix = \"universal\";\n    } else {\n      throw new Error(\n        `fetchStyle ${this.actionOptions.fetchStyle} is not a valid style`,\n      );\n    }\n\n    this.sourceParameters = constructSourceParameters(\n      this.actionOptions.legacySourcePrefix,\n    );\n\n    this.recordEvent(`begin_${this.executionPhase}`);\n  }\n\n  onMain(callback: () => Promise<void>): void {\n    this.hookMain = callback;\n  }\n\n  onPost(callback: () => Promise<void>): void {\n    this.hookPost = callback;\n  }\n\n  execute(): void {\n    // eslint-disable-next-line github/no-then\n    this.executeAsync().catch((error: Error) => {\n      // eslint-disable-next-line no-console\n      console.log(error);\n      process.exitCode = 1;\n    });\n  }\n\n  private async executeAsync(): Promise<void> {\n    try {\n      process.env.DETSYS_CORRELATION = JSON.stringify(\n        this.getCorrelationHashes(),\n      );\n\n      if (!(await this.preflightRequireNix())) {\n        this.recordEvent(\"preflight-require-nix-denied\");\n        return;\n      }\n\n      if (this.executionPhase === \"main\" && this.hookMain) {\n        await this.hookMain();\n      } else if (this.executionPhase === \"post\" && this.hookPost) {\n        await this.hookPost();\n      }\n      this.addFact(FACT_ENDED_WITH_EXCEPTION, false);\n    } catch (error) {\n      this.addFact(FACT_ENDED_WITH_EXCEPTION, true);\n\n      const reportable =\n        error instanceof Error || typeof error == \"string\"\n          ? error.toString()\n          : JSON.stringify(error);\n\n      this.addFact(FACT_FINAL_EXCEPTION, reportable);\n\n      if (this.executionPhase === \"post\") {\n        actionsCore.warning(reportable);\n      } else {\n        actionsCore.setFailed(reportable);\n      }\n\n      this.recordEvent(EVENT_EXCEPTION);\n    } finally {\n      await this.complete();\n    }\n  }\n\n  addFact(key: string, value: string | boolean): void {\n    this.facts[key] = value;\n  }\n\n  getDiagnosticsUrl(): URL | undefined {\n    return this.actionOptions.diagnosticsUrl;\n  }\n\n  getUniqueId(): string {\n    return (\n      this.identity.run_differentiator ||\n      process.env.RUNNER_TRACKING_ID ||\n      randomUUID()\n    );\n  }\n\n  getCorrelationHashes(): correlation.AnonymizedCorrelationHashes {\n    return this.identity;\n  }\n\n  recordEvent(eventName: string, context: Record<string, unknown> = {}): void {\n    this.events.push({\n      event_name: `${this.actionOptions.eventPrefix}${eventName}`,\n      context,\n      correlation: this.identity,\n      facts: this.facts,\n      timestamp: new Date(),\n      uuid: randomUUID(),\n    });\n  }\n\n  async fetch(): Promise<string> {\n    actionsCore.info(`Fetching from ${this.getUrl()}`);\n\n    const correlatedUrl = this.getUrl();\n    correlatedUrl.searchParams.set(\"ci\", \"github\");\n    correlatedUrl.searchParams.set(\n      \"correlation\",\n      JSON.stringify(this.identity),\n    );\n\n    const versionCheckup = await this.client.head(correlatedUrl);\n    if (versionCheckup.headers.etag) {\n      const v = versionCheckup.headers.etag;\n\n      actionsCore.debug(`Checking the tool cache for ${this.getUrl()} at ${v}`);\n      const cached = await this.getCachedVersion(v);\n      if (cached) {\n        this.facts[\"artifact_fetched_from_cache\"] = true;\n        actionsCore.debug(`Tool cache hit.`);\n        return cached;\n      }\n    }\n\n    this.facts[\"artifact_fetched_from_cache\"] = false;\n\n    actionsCore.debug(\n      `No match from the cache, re-fetching from the redirect: ${versionCheckup.url}`,\n    );\n\n    const destFile = this.getTemporaryName();\n    const fetchStream = this.client.stream(versionCheckup.url);\n\n    await pipeline(\n      fetchStream,\n      createWriteStream(destFile, {\n        encoding: \"binary\",\n        mode: 0o755,\n      }),\n    );\n\n    if (fetchStream.response?.headers.etag) {\n      const v = fetchStream.response.headers.etag;\n\n      try {\n        await this.saveCachedVersion(v, destFile);\n      } catch (e) {\n        actionsCore.debug(`Error caching the artifact: ${e}`);\n      }\n    }\n\n    return destFile;\n  }\n\n  async fetchExecutable(): Promise<string> {\n    const binaryPath = await this.fetch();\n    await chmod(binaryPath, fs.constants.S_IXUSR | fs.constants.S_IXGRP);\n    return binaryPath;\n  }\n\n  private async complete(): Promise<void> {\n    this.recordEvent(`complete_${this.executionPhase}`);\n    await this.submitEvents();\n  }\n\n  private getUrl(): URL {\n    const p = this.sourceParameters;\n\n    if (p.url) {\n      return new URL(p.url);\n    }\n\n    const fetchUrl = new URL(IDS_HOST);\n    fetchUrl.pathname += this.actionOptions.idsProjectName;\n\n    if (p.tag) {\n      fetchUrl.pathname += `/tag/${p.tag}`;\n    } else if (p.pr) {\n      fetchUrl.pathname += `/pr/${p.pr}`;\n    } else if (p.branch) {\n      fetchUrl.pathname += `/branch/${p.branch}`;\n    } else if (p.revision) {\n      fetchUrl.pathname += `/rev/${p.revision}`;\n    } else {\n      fetchUrl.pathname += `/stable`;\n    }\n\n    fetchUrl.pathname += `/${this.architectureFetchSuffix}`;\n\n    return fetchUrl;\n  }\n\n  private cacheKey(version: string): string {\n    const cleanedVersion = version.replace(/[^a-zA-Z0-9-+.]/g, \"\");\n    return `determinatesystem-${this.actionOptions.name}-${this.architectureFetchSuffix}-${cleanedVersion}`;\n  }\n\n  private async getCachedVersion(version: string): Promise<undefined | string> {\n    const startCwd = process.cwd();\n\n    try {\n      const tempDir = this.getTemporaryName();\n      await mkdir(tempDir);\n      process.chdir(tempDir);\n\n      // extremely evil shit right here:\n      process.env.GITHUB_WORKSPACE_BACKUP = process.env.GITHUB_WORKSPACE;\n      delete process.env.GITHUB_WORKSPACE;\n\n      if (\n        await actionsCache.restoreCache(\n          [this.actionOptions.name],\n          this.cacheKey(version),\n          [],\n          undefined,\n          true,\n        )\n      ) {\n        this.recordEvent(EVENT_ARTIFACT_CACHE_HIT);\n        return `${tempDir}/${this.actionOptions.name}`;\n      }\n\n      this.recordEvent(EVENT_ARTIFACT_CACHE_MISS);\n      return undefined;\n    } finally {\n      process.env.GITHUB_WORKSPACE = process.env.GITHUB_WORKSPACE_BACKUP;\n      delete process.env.GITHUB_WORKSPACE_BACKUP;\n      process.chdir(startCwd);\n    }\n  }\n\n  private async saveCachedVersion(\n    version: string,\n    toolPath: string,\n  ): Promise<void> {\n    const startCwd = process.cwd();\n\n    try {\n      const tempDir = this.getTemporaryName();\n      await mkdir(tempDir);\n      process.chdir(tempDir);\n      await copyFile(toolPath, `${tempDir}/${this.actionOptions.name}`);\n\n      // extremely evil shit right here:\n      process.env.GITHUB_WORKSPACE_BACKUP = process.env.GITHUB_WORKSPACE;\n      delete process.env.GITHUB_WORKSPACE;\n\n      await actionsCache.saveCache(\n        [this.actionOptions.name],\n        this.cacheKey(version),\n        undefined,\n        true,\n      );\n      this.recordEvent(EVENT_ARTIFACT_CACHE_HIT);\n    } finally {\n      process.env.GITHUB_WORKSPACE = process.env.GITHUB_WORKSPACE_BACKUP;\n      delete process.env.GITHUB_WORKSPACE_BACKUP;\n      process.chdir(startCwd);\n    }\n  }\n\n  private async preflightRequireNix(): Promise<boolean> {\n    let nixLocation: string | undefined;\n\n    const pathParts = (process.env[\"PATH\"] || \"\").split(\":\");\n    for (const location of pathParts) {\n      const candidateNix = path.join(location, \"nix\");\n\n      try {\n        await fs.access(candidateNix, fs.constants.X_OK);\n        actionsCore.debug(`Found Nix at ${candidateNix}`);\n        nixLocation = candidateNix;\n      } catch {\n        actionsCore.debug(`Nix not at ${candidateNix}`);\n      }\n    }\n    this.addFact(\"nix_location\", nixLocation || \"\");\n\n    if (this.actionOptions.requireNix === \"ignore\") {\n      return true;\n    }\n\n    const currentNotFoundState = actionsCore.getState(\n      \"idstoolbox_nix_not_found\",\n    );\n    if (currentNotFoundState === \"not-found\") {\n      // It was previously not found, so don't run subsequent actions\n      return false;\n    }\n\n    if (nixLocation !== undefined) {\n      return true;\n    }\n    actionsCore.saveState(\"idstoolbox_nix_not_found\", \"not-found\");\n\n    switch (this.actionOptions.requireNix) {\n      case \"fail\":\n        actionsCore.setFailed(\n          \"This action can only be used when Nix is installed.\" +\n            \" Add `- uses: DeterminateSystems/nix-installer-action@main` earlier in your workflow.\",\n        );\n        break;\n      case \"warn\":\n        actionsCore.warning(\n          \"This action is in no-op mode because Nix is not installed.\" +\n            \" Add `- uses: DeterminateSystems/nix-installer-action@main` earlier in your workflow.\",\n        );\n        break;\n    }\n\n    return false;\n  }\n\n  private async submitEvents(): Promise<void> {\n    if (!this.actionOptions.diagnosticsUrl) {\n      actionsCore.debug(\n        \"Diagnostics are disabled. Not sending the following events:\",\n      );\n      actionsCore.debug(JSON.stringify(this.events, undefined, 2));\n      return;\n    }\n\n    const batch = {\n      type: \"eventlog\",\n      sent_at: new Date(),\n      events: this.events,\n    };\n\n    try {\n      await this.client.post(this.actionOptions.diagnosticsUrl, {\n        json: batch,\n      });\n    } catch (error) {\n      actionsCore.debug(`Error submitting diagnostics event: ${error}`);\n    }\n    this.events = [];\n  }\n\n  private getTemporaryName(): string {\n    const _tmpdir = process.env[\"RUNNER_TEMP\"] || tmpdir();\n    return path.join(_tmpdir, `${this.actionOptions.name}-${randomUUID()}`);\n  }\n}\n\nfunction makeOptionsConfident(\n  actionOptions: ActionOptions,\n): ConfidentActionOptions {\n  const idsProjectName = actionOptions.idsProjectName ?? actionOptions.name;\n\n  const finalOpts: ConfidentActionOptions = {\n    name: actionOptions.name,\n    idsProjectName,\n    eventPrefix: actionOptions.eventPrefix || \"action:\",\n    fetchStyle: actionOptions.fetchStyle,\n    legacySourcePrefix: actionOptions.legacySourcePrefix,\n    requireNix: actionOptions.requireNix,\n    diagnosticsUrl: determineDiagnosticsUrl(\n      idsProjectName,\n      actionOptions.diagnosticsUrl,\n    ),\n  };\n\n  actionsCore.debug(\"idslib options:\");\n  actionsCore.debug(JSON.stringify(finalOpts, undefined, 2));\n\n  return finalOpts;\n}\n\nfunction determineDiagnosticsUrl(\n  idsProjectName: string,\n  urlOption?: URL | null,\n): undefined | URL {\n  if (urlOption === null) {\n    // Disable diagnostict events\n    return undefined;\n  }\n\n  if (urlOption !== undefined) {\n    // Caller specified a specific diagnostics URL\n    return urlOption;\n  }\n\n  {\n    // Attempt to use the action input's diagnostic-endpoint option.\n\n    // Note: we don't use actionsCore.getInput('diagnostic-endpoint') on purpose:\n    // getInput silently converts absent data to an empty string.\n    const providedDiagnosticEndpoint = process.env[\"INPUT_DIAGNOSTIC-ENDPOINT\"];\n    if (providedDiagnosticEndpoint === \"\") {\n      // User probably explicitly turned it off\n      return undefined;\n    }\n\n    if (providedDiagnosticEndpoint !== undefined) {\n      try {\n        return mungeDiagnosticEndpoint(new URL(providedDiagnosticEndpoint));\n      } catch (e) {\n        actionsCore.info(\n          `User-provided diagnostic endpoint ignored: not a valid URL: ${e}`,\n        );\n      }\n    }\n  }\n\n  try {\n    const diagnosticUrl = new URL(IDS_HOST);\n    diagnosticUrl.pathname += idsProjectName;\n    diagnosticUrl.pathname += \"/diagnostics\";\n    return diagnosticUrl;\n  } catch (e) {\n    actionsCore.info(\n      `Generated diagnostic endpoint ignored: not a valid URL: ${e}`,\n    );\n  }\n\n  return undefined;\n}\n\nfunction mungeDiagnosticEndpoint(inputUrl: URL): URL {\n  if (DEFAULT_IDS_HOST === IDS_HOST) {\n    return inputUrl;\n  }\n\n  try {\n    const defaultIdsHost = new URL(DEFAULT_IDS_HOST);\n    const currentIdsHost = new URL(IDS_HOST);\n\n    if (inputUrl.origin !== defaultIdsHost.origin) {\n      return inputUrl;\n    }\n\n    inputUrl.protocol = currentIdsHost.protocol;\n    inputUrl.host = currentIdsHost.host;\n    inputUrl.username = currentIdsHost.username;\n    inputUrl.password = currentIdsHost.password;\n\n    return inputUrl;\n  } catch (e) {\n    actionsCore.info(`Default or overridden IDS host isn't a valid URL: ${e}`);\n  }\n\n  return inputUrl;\n}\n\n// Public exports from other files\nexport * as inputs from \"./inputs.js\";\nexport * as platform from \"./platform.js\";\n"],"mappings":"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","names":["platform"]}