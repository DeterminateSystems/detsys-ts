{"version":3,"sources":["../src/main.ts","../src/correlation.ts","../src/package.json","../src/platform.ts","../src/sourcedef.ts"],"sourcesContent":["import * as correlation from \"./correlation\";\n// eslint-disable-next-line import/extensions\nimport pkg from \"./package.json\";\nimport * as platform from \"./platform\";\nimport { SourceDef, constructSourceParameters } from \"./sourcedef\";\nimport * as actionsCache from \"@actions/cache\";\nimport * as actionsCore from \"@actions/core\";\nimport got, { Got } from \"got\";\nimport { randomUUID } from \"node:crypto\";\nimport { createWriteStream } from \"node:fs\";\nimport fs, { chmod, copyFile, mkdir } from \"node:fs/promises\";\nimport { tmpdir } from \"node:os\";\nimport * as path from \"node:path\";\nimport { pipeline } from \"node:stream/promises\";\nimport { v4 as uuidV4 } from \"uuid\";\n\nconst DEFAULT_IDS_HOST = \"https://install.determinate.systems\";\nconst IDS_HOST = process.env[\"IDS_HOST\"] ?? DEFAULT_IDS_HOST;\n\nconst gotClient = got.extend({\n  retry: {\n    limit: 3,\n    methods: [\"GET\", \"HEAD\"],\n  },\n  hooks: {\n    beforeRetry: [\n      (error, retryCount) => {\n        actionsCore.info(\n          `Retrying after error ${error.code}, retry #: ${retryCount}`,\n        );\n      },\n    ],\n  },\n});\n\nexport type FetchSuffixStyle = \"nix-style\" | \"gh-env-style\" | \"universal\";\nexport type ExecutionPhase = \"main\" | \"post\";\n\nexport type ActionOptions = {\n  // Name of the project generally, and the name of the binary on disk.\n  name: string;\n\n  // Defaults to `name`, Corresponds to the ProjectHost entry on i.d.s.\n  idsProjectName?: string;\n\n  // Defaults to `action:`\n  eventPrefix?: string;\n\n  // The \"architecture\" URL component expected by I.D.S. for the ProjectHost.\n  fetchStyle: FetchSuffixStyle;\n\n  // IdsToolbox assumes the GitHub Action exposes source overrides, like branch/pr/etc. to be named `source-*`.\n  // This prefix adds a fallback name, prefixed by `${legacySourcePrefix}-`.\n  // Users who configure legacySourcePrefix will get warnings asking them to change to `source-*`.\n  legacySourcePrefix?: string;\n\n  // The URL to send diagnostics events to.\n  // Specifically:\n  //  * `undefined` -> Attempt to read the `diagnostic-enpdoint` action input, and calculate the default diagnostics URL for IDS from there.\n  //  * `null` -> Disable sending diagnostics altogether.\n  //  * URL(...) -> Send diagnostics to this other URL instead\n  diagnosticsUrl?: URL | null;\n};\n\n// A confident version of Options, where defaults have been resolved into final values\ntype ConfidentActionOptions = {\n  name: string;\n  idsProjectName: string;\n  eventPrefix: string;\n  fetchStyle: FetchSuffixStyle;\n  legacySourcePrefix?: string;\n  diagnosticsUrl?: URL;\n};\n\ntype DiagnosticEvent = {\n  event_name: string;\n  correlation: correlation.AnonymizedCorrelationHashes;\n  facts: Record<string, string | boolean>;\n  context: Record<string, unknown>;\n  timestamp: Date;\n};\n\nexport class IdsToolbox {\n  private identity: correlation.AnonymizedCorrelationHashes;\n  private actionOptions: ConfidentActionOptions;\n  private archOs: string;\n  private nixSystem: string;\n  private architectureFetchSuffix: string;\n  private executionPhase: ExecutionPhase;\n  private sourceParameters: SourceDef;\n  private facts: Record<string, string | boolean>;\n  private events: DiagnosticEvent[];\n  private client: Got;\n\n  constructor(actionOptions: ActionOptions) {\n    this.actionOptions = makeOptionsConfident(actionOptions);\n    this.events = [];\n    this.client = got.extend({\n      retry: {\n        limit: 3,\n        methods: [\"GET\", \"HEAD\"],\n      },\n      hooks: {\n        beforeRetry: [\n          (error, retryCount) => {\n            actionsCore.info(\n              `Retrying after error ${error.code}, retry #: ${retryCount}`,\n            );\n          },\n        ],\n      },\n    });\n\n    this.facts = {\n      $lib: \"idslib\",\n      $lib_version: pkg.version,\n      project: this.actionOptions.name,\n      ids_project: this.actionOptions.idsProjectName,\n    };\n\n    const params = [\n      [\"github_action_ref\", \"GITHUB_ACTION_REF\"],\n      [\"github_action_repository\", \"GITHUB_ACTION_REPOSITORY\"],\n      [\"github_event_name\", \"GITHUB_EVENT_NAME\"],\n      [\"$os\", \"RUNNER_OS\"],\n      [\"arch\", \"RUNNER_ARCH\"],\n    ];\n    for (const [target, env] of params) {\n      const value = process.env[env];\n      if (value) {\n        this.facts[target] = value;\n      }\n    }\n\n    this.identity = correlation.identify(this.actionOptions.name);\n    this.archOs = platform.getArchOs();\n    this.nixSystem = platform.getNixPlatform(this.archOs);\n\n    this.facts.arch_os = this.archOs;\n    this.facts.nix_system = this.nixSystem;\n\n    {\n      const phase = actionsCore.getState(\"idstoolbox_execution_phase\");\n      if (phase === \"\") {\n        actionsCore.saveState(\"idstoolbox_execution_phase\", \"post\");\n        this.executionPhase = \"main\";\n      } else {\n        this.executionPhase = \"post\";\n      }\n      this.facts.execution_phase = this.executionPhase;\n    }\n\n    if (this.actionOptions.fetchStyle === \"gh-env-style\") {\n      this.architectureFetchSuffix = this.archOs;\n    } else if (this.actionOptions.fetchStyle === \"nix-style\") {\n      this.architectureFetchSuffix = this.nixSystem;\n    } else if (this.actionOptions.fetchStyle === \"universal\") {\n      this.architectureFetchSuffix = \"universal\";\n    } else {\n      throw new Error(\n        `fetchStyle ${this.actionOptions.fetchStyle} is not a valid style`,\n      );\n    }\n\n    this.sourceParameters = constructSourceParameters(\n      this.actionOptions.legacySourcePrefix,\n    );\n\n    this.recordEvent(`begin_${this.executionPhase}`);\n  }\n\n  addFact(key: string, value: string | boolean): void {\n    this.facts[key] = value;\n  }\n\n  getDiagnosticsUrl(): URL | undefined {\n    return this.actionOptions.diagnosticsUrl;\n  }\n\n  getUniqueId(): string {\n    return (\n      this.identity.run_differentiator ||\n      process.env.RUNNER_TRACKING_ID ||\n      randomUUID()\n    );\n  }\n\n  recordEvent(eventName: string, context: Record<string, unknown> = {}): void {\n    this.events.push({\n      event_name: `${this.actionOptions.eventPrefix}${eventName}`,\n      context,\n      correlation: this.identity,\n      facts: this.facts,\n      timestamp: new Date(),\n    });\n  }\n\n  async fetch(): Promise<string> {\n    actionsCore.info(`Fetching from ${this.getUrl()}`);\n\n    const correlatedUrl = this.getUrl();\n    correlatedUrl.searchParams.set(\"ci\", \"github\");\n    correlatedUrl.searchParams.set(\n      \"correlation\",\n      JSON.stringify(this.identity),\n    );\n\n    const versionCheckup = await gotClient.head(correlatedUrl);\n    if (versionCheckup.headers.etag) {\n      const v = versionCheckup.headers.etag;\n\n      actionsCore.debug(`Checking the tool cache for ${this.getUrl()} at ${v}`);\n      const cached = await this.getCachedVersion(v);\n      if (cached) {\n        this.facts[\"artifact_fetched_from_cache\"] = true;\n        actionsCore.debug(`Tool cache hit.`);\n        return cached;\n      }\n    }\n\n    this.facts[\"artifact_fetched_from_cache\"] = false;\n\n    actionsCore.debug(\n      `No match from the cache, re-fetching from the redirect: ${versionCheckup.url}`,\n    );\n\n    const destFile = this.getTemporaryName();\n    const fetchStream = gotClient.stream(versionCheckup.url);\n\n    await pipeline(\n      fetchStream,\n      createWriteStream(destFile, {\n        encoding: \"binary\",\n        mode: 0o755,\n      }),\n    );\n\n    if (fetchStream.response?.headers.etag) {\n      const v = fetchStream.response.headers.etag;\n\n      try {\n        await this.saveCachedVersion(v, destFile);\n      } catch (e) {\n        actionsCore.debug(`Error caching the artifact: ${e}`);\n      }\n    }\n\n    return destFile;\n  }\n\n  async fetchExecutable(): Promise<string> {\n    const binaryPath = await this.fetch();\n    await chmod(binaryPath, fs.constants.S_IXUSR | fs.constants.S_IXGRP);\n    return binaryPath;\n  }\n\n  async complete(): Promise<void> {\n    this.recordEvent(`complete_${this.executionPhase}`);\n    await this.submitEvents();\n  }\n\n  private getUrl(): URL {\n    const p = this.sourceParameters;\n\n    if (p.url) {\n      return new URL(p.url);\n    }\n\n    const fetchUrl = new URL(IDS_HOST);\n    fetchUrl.pathname += this.actionOptions.idsProjectName;\n\n    if (p.tag) {\n      fetchUrl.pathname += `/tag/${p.tag}`;\n    } else if (p.pr) {\n      fetchUrl.pathname += `/pr/${p.pr}`;\n    } else if (p.branch) {\n      fetchUrl.pathname += `/branch/${p.branch}`;\n    } else if (p.revision) {\n      fetchUrl.pathname += `/rev/${p.revision}`;\n    } else {\n      fetchUrl.pathname += `/stable`;\n    }\n\n    fetchUrl.pathname += `/${this.architectureFetchSuffix}`;\n\n    return fetchUrl;\n  }\n\n  private cacheKey(version: string): string {\n    const cleanedVersion = version.replace(/[^a-zA-Z0-9-+.]/g, \"\");\n    return `determinatesystem-${this.actionOptions.name}-${this.architectureFetchSuffix}-${cleanedVersion}`;\n  }\n\n  private async getCachedVersion(version: string): Promise<undefined | string> {\n    const startCwd = process.cwd();\n\n    try {\n      const tempDir = this.getTemporaryName();\n      await mkdir(tempDir);\n      process.chdir(tempDir);\n\n      // extremely evil shit right here:\n      process.env.GITHUB_WORKSPACE_BACKUP = process.env.GITHUB_WORKSPACE;\n      delete process.env.GITHUB_WORKSPACE;\n\n      if (\n        await actionsCache.restoreCache(\n          [this.actionOptions.name],\n          this.cacheKey(version),\n          [],\n          undefined,\n          true,\n        )\n      ) {\n        this.recordEvent(\"artifact_cache_hit\");\n        return `${tempDir}/${this.actionOptions.name}`;\n      }\n\n      this.recordEvent(\"artifact_cache_miss\");\n      return undefined;\n    } finally {\n      process.env.GITHUB_WORKSPACE = process.env.GITHUB_WORKSPACE_BACKUP;\n      delete process.env.GITHUB_WORKSPACE_BACKUP;\n      process.chdir(startCwd);\n    }\n  }\n\n  private async saveCachedVersion(\n    version: string,\n    toolPath: string,\n  ): Promise<void> {\n    const startCwd = process.cwd();\n\n    try {\n      const tempDir = this.getTemporaryName();\n      await mkdir(tempDir);\n      process.chdir(tempDir);\n      await copyFile(toolPath, `${tempDir}/${this.actionOptions.name}`);\n\n      // extremely evil shit right here:\n      process.env.GITHUB_WORKSPACE_BACKUP = process.env.GITHUB_WORKSPACE;\n      delete process.env.GITHUB_WORKSPACE;\n\n      await actionsCache.saveCache(\n        [this.actionOptions.name],\n        this.cacheKey(version),\n        undefined,\n        true,\n      );\n      this.recordEvent(\"artifact_cache_hit\");\n    } finally {\n      process.env.GITHUB_WORKSPACE = process.env.GITHUB_WORKSPACE_BACKUP;\n      delete process.env.GITHUB_WORKSPACE_BACKUP;\n      process.chdir(startCwd);\n    }\n  }\n\n  private async submitEvents(): Promise<void> {\n    if (!this.actionOptions.diagnosticsUrl) {\n      actionsCore.debug(\n        \"Diagnostics are disabled. Not sending the following events:\",\n      );\n      actionsCore.debug(JSON.stringify(this.events, undefined, 2));\n      return;\n    }\n\n    const batch = {\n      type: \"eventlog\",\n      sent_at: new Date(),\n      events: this.events,\n    };\n\n    try {\n      await gotClient.post(this.actionOptions.diagnosticsUrl, {\n        json: batch,\n      });\n    } catch (error) {\n      actionsCore.debug(`Error submitting diagnostics event: ${error}`);\n    }\n    this.events = [];\n  }\n\n  private getTemporaryName(): string {\n    const _tmpdir = process.env[\"RUNNER_TEMP\"] || tmpdir();\n    return path.join(_tmpdir, `${this.actionOptions.name}-${uuidV4()}`);\n  }\n}\n\nfunction makeOptionsConfident(\n  actionOptions: ActionOptions,\n): ConfidentActionOptions {\n  const idsProjectName = actionOptions.idsProjectName ?? actionOptions.name;\n\n  const finalOpts: ConfidentActionOptions = {\n    name: actionOptions.name,\n    idsProjectName,\n    eventPrefix: actionOptions.eventPrefix || \"action:\",\n    fetchStyle: actionOptions.fetchStyle,\n    legacySourcePrefix: actionOptions.legacySourcePrefix,\n    diagnosticsUrl: determineDiagnosticsUrl(\n      idsProjectName,\n      actionOptions.diagnosticsUrl,\n    ),\n  };\n\n  actionsCore.debug(\"idslib options:\");\n  actionsCore.debug(JSON.stringify(finalOpts, undefined, 2));\n\n  return finalOpts;\n}\n\nfunction determineDiagnosticsUrl(\n  idsProjectName: string,\n  urlOption?: URL | null,\n): undefined | URL {\n  if (urlOption === null) {\n    // Disable diagnostict events\n    return undefined;\n  }\n\n  if (urlOption !== undefined) {\n    // Caller specified a specific diagnostics URL\n    return urlOption;\n  }\n\n  {\n    // Attempt to use the action input's diagnostic-endpoint option.\n\n    // Note: we don't use actionsCore.getInput('diagnostic-endpoint') on purpose:\n    // getInput silently converts absent data to an empty string.\n    const providedDiagnosticEndpoint = process.env[\"INPUT_DIAGNOSTIC-ENDPOINT\"];\n    if (providedDiagnosticEndpoint === \"\") {\n      // User probably explicitly turned it off\n      return undefined;\n    }\n\n    if (providedDiagnosticEndpoint !== undefined) {\n      try {\n        return mungeDiagnosticEndpoint(new URL(providedDiagnosticEndpoint));\n      } catch (e) {\n        actionsCore.info(\n          `User-provided diagnostic endpoint ignored: not a valid URL: ${e}`,\n        );\n      }\n    }\n  }\n\n  try {\n    const diagnosticUrl = new URL(IDS_HOST);\n    diagnosticUrl.pathname += idsProjectName;\n    diagnosticUrl.pathname += \"/diagnostics\";\n    return diagnosticUrl;\n  } catch (e) {\n    actionsCore.info(\n      `Generated diagnostic endpoint ignored: not a valid URL: ${e}`,\n    );\n  }\n\n  return undefined;\n}\n\nfunction mungeDiagnosticEndpoint(inputUrl: URL): URL {\n  if (DEFAULT_IDS_HOST === IDS_HOST) {\n    return inputUrl;\n  }\n\n  try {\n    const defaultIdsHost = new URL(DEFAULT_IDS_HOST);\n    const currentIdsHost = new URL(IDS_HOST);\n\n    if (inputUrl.origin !== defaultIdsHost.origin) {\n      return inputUrl;\n    }\n\n    inputUrl.protocol = currentIdsHost.protocol;\n    inputUrl.host = currentIdsHost.host;\n    inputUrl.username = currentIdsHost.username;\n    inputUrl.password = currentIdsHost.password;\n\n    return inputUrl;\n  } catch (e) {\n    actionsCore.info(`Default or overridden IDS host isn't a valid URL: ${e}`);\n  }\n\n  return inputUrl;\n}\n","import * as actionsCore from \"@actions/core\";\nimport { createHash } from \"node:crypto\";\n\nexport type AnonymizedCorrelationHashes = {\n  correlation_source: string;\n  repository?: string;\n  run?: string;\n  run_differentiator?: string;\n  workflow?: string;\n  groups: Record<string, string | undefined>;\n};\n\nexport function identify(projectName: string): AnonymizedCorrelationHashes {\n  const ident = {\n    correlation_source: \"github-actions\",\n\n    repository: hashEnvironmentVariables(\"GHR\", [\n      \"GITHUB_SERVER_URL\",\n      \"GITHUB_REPOSITORY_OWNER\",\n      \"GITHUB_REPOSITORY_OWNER_ID\",\n      \"GITHUB_REPOSITORY\",\n      \"GITHUB_REPOSITORY_ID\",\n    ]),\n    workflow: hashEnvironmentVariables(\"GHW\", [\n      \"GITHUB_SERVER_URL\",\n      \"GITHUB_REPOSITORY_OWNER\",\n      \"GITHUB_REPOSITORY_OWNER_ID\",\n      \"GITHUB_REPOSITORY\",\n      \"GITHUB_REPOSITORY_ID\",\n      \"GITHUB_WORKFLOW\",\n    ]),\n    run: hashEnvironmentVariables(\"GHWR\", [\n      \"GITHUB_SERVER_URL\",\n      \"GITHUB_REPOSITORY_OWNER\",\n      \"GITHUB_REPOSITORY_OWNER_ID\",\n      \"GITHUB_REPOSITORY\",\n      \"GITHUB_REPOSITORY_ID\",\n      \"GITHUB_RUN_ID\",\n    ]),\n    run_differentiator: hashEnvironmentVariables(\"GHWA\", [\n      \"GITHUB_SERVER_URL\",\n      \"GITHUB_REPOSITORY_OWNER\",\n      \"GITHUB_REPOSITORY_OWNER_ID\",\n      \"GITHUB_REPOSITORY\",\n      \"GITHUB_REPOSITORY_ID\",\n      \"GITHUB_RUN_ID\",\n      \"GITHUB_RUN_NUMBER\",\n      \"GITHUB_RUN_ATTEMPT\",\n    ]),\n    groups: {\n      ci: \"github-actions\",\n      project: projectName,\n      github_organization: hashEnvironmentVariables(\"GHO\", [\n        \"GITHUB_SERVER_URL\",\n        \"GITHUB_REPOSITORY_OWNER\",\n        \"GITHUB_REPOSITORY_OWNER_ID\",\n      ]),\n    },\n  };\n\n  actionsCore.debug(\"Correlation data:\");\n  actionsCore.debug(JSON.stringify(ident, null, 2));\n\n  return ident;\n}\n\nfunction hashEnvironmentVariables(\n  prefix: string,\n  variables: string[],\n): undefined | string {\n  const hash = createHash(\"sha256\");\n\n  for (const varName of variables) {\n    const value = process.env[varName];\n    if (value === undefined) {\n      actionsCore.debug(\n        `Environment variable not set: ${varName} -- can't generate the requested identity`,\n      );\n      return undefined;\n    } else {\n      hash.update(value);\n      hash.update(\"\\0\");\n    }\n  }\n\n  return `${prefix}-${hash.digest(\"hex\")}`;\n}\n","{\n  \"name\": \"detsys-ts\",\n  \"version\": \"1.0.0\",\n  \"description\": \"TypeScript goodies for DetSys projects\",\n  \"main\": \"./dist/main.cjs\",\n  \"types\": \"./dist/main.d.cts\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"build\": \"tsup\",\n    \"format\": \"prettier --write .\",\n    \"lint\": \"pnpm run prebuild && eslint src/**/*.ts\",\n    \"prebuild\": \"cp package.json ./src/package.json\",\n    \"all\": \"pnpm run format && pnpm run lint && pnpm run build\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/DeterminateSystems/detsys-ts.git\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/DeterminateSystems/detsys-ts/issues\"\n  },\n  \"homepage\": \"https://github.com/DeterminateSystems/detsys-ts#readme\",\n  \"dependencies\": {\n    \"@actions/cache\": \"^3.2.4\",\n    \"@actions/core\": \"^1.10.0\",\n    \"@actions/exec\": \"^1.1.1\",\n    \"@actions/github\": \"^5.1.1\",\n    \"fetch-retry\": \"^5.0.6\",\n    \"got\": \"^14.2.1\",\n    \"string-argv\": \"^0.3.2\",\n    \"uuid\": \"^9.0.1\"\n  },\n  \"devDependencies\": {\n    \"@trivago/prettier-plugin-sort-imports\": \"^4.3.0\",\n    \"@types/node\": \"^18.19.30\",\n    \"@types/uuid\": \"^9.0.8\",\n    \"@typescript-eslint/eslint-plugin\": \"^7.2.0\",\n    \"eslint\": \"^8.57.0\",\n    \"eslint-import-resolver-typescript\": \"^3.6.1\",\n    \"eslint-plugin-github\": \"^4.3.6\",\n    \"eslint-plugin-import\": \"^2.29.1\",\n    \"eslint-plugin-prettier\": \"^5.0.0-alpha.1\",\n    \"prettier\": \"^3.0.0\",\n    \"tsup\": \"^8.0.2\",\n    \"typescript\": \"^5.1.6\"\n  }\n}\n","import * as actionsCore from \"@actions/core\";\n\nexport function getArchOs(): string {\n  const envArch = process.env.RUNNER_ARCH;\n  const envOs = process.env.RUNNER_OS;\n\n  if (envArch && envOs) {\n    return `${envArch}-${envOs}`;\n  } else {\n    actionsCore.error(\n      `Can't identify the platform: RUNNER_ARCH or RUNNER_OS undefined (${envArch}-${envOs})`,\n    );\n    throw new Error(\"RUNNER_ARCH and/or RUNNER_OS is not defined\");\n  }\n}\n\nexport function getNixPlatform(archOs: string): string {\n  const archOsMap: Map<string, string> = new Map([\n    [\"X64-macOS\", \"x86_64-darwin\"],\n    [\"ARM64-macOS\", \"aarch64-darwin\"],\n    [\"X64-Linux\", \"x86_64-linux\"],\n    [\"ARM64-Linux\", \"aarch64-linux\"],\n  ]);\n\n  const mappedTo = archOsMap.get(archOs);\n  if (mappedTo) {\n    return mappedTo;\n  } else {\n    actionsCore.error(\n      `ArchOs (${archOs}) doesn't map to a supported Nix platform.`,\n    );\n    throw new Error(\n      `Cannot convert ArchOs (${archOs}) to a supported Nix platform.`,\n    );\n  }\n}\n","import * as actionsCore from \"@actions/core\";\n\nexport type SourceDef = {\n  path?: string;\n  url?: string;\n  tag?: string;\n  pr?: string;\n  branch?: string;\n  revision?: string;\n};\n\nexport function constructSourceParameters(legacyPrefix?: string): SourceDef {\n  const noisilyGetInput = (suffix: string): string | undefined => {\n    const preferredInput = inputStringOrUndef(`source-${suffix}`);\n\n    if (!legacyPrefix) {\n      return preferredInput;\n    }\n\n    // Remaining is for handling cases where the legacy prefix\n    // should be examined.\n    const legacyInput = inputStringOrUndef(`${legacyPrefix}-${suffix}`);\n\n    if (preferredInput && legacyInput) {\n      actionsCore.warning(\n        `The supported option source-${suffix} and the legacy option ${legacyPrefix}-${suffix} are both set. Preferring source-${suffix}. Please stop setting ${legacyPrefix}-${suffix}.`,\n      );\n      return preferredInput;\n    } else if (legacyInput) {\n      actionsCore.warning(\n        `The legacy option ${legacyPrefix}-${suffix} is set. Please migrate to source-${suffix}.`,\n      );\n      return legacyInput;\n    } else {\n      return preferredInput;\n    }\n  };\n\n  return {\n    path: noisilyGetInput(\"path\"),\n    url: noisilyGetInput(\"url\"),\n    tag: noisilyGetInput(\"tag\"),\n    pr: noisilyGetInput(\"pr\"),\n    branch: noisilyGetInput(\"branch\"),\n    revision: noisilyGetInput(\"revision\"),\n  };\n}\n\nfunction inputStringOrUndef(name: string): string | undefined {\n  const value = actionsCore.getInput(name);\n  if (value === \"\") {\n    return undefined;\n  } else {\n    return value;\n  }\n}\n"],"mappings":"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","names":["main_exports","__export","IdsToolbox","__toCommonJS","actionsCore","import_node_crypto","identify","projectName","ident","hashEnvironmentVariables","prefix","variables","hash","varName","value","package_default","actionsCore","getArchOs","envArch","envOs","getNixPlatform","archOs","mappedTo","actionsCore","constructSourceParameters","legacyPrefix","noisilyGetInput","suffix","preferredInput","inputStringOrUndef","legacyInput","name","value","actionsCache","actionsCore","import_got","import_node_crypto","import_node_fs","import_promises","import_node_os","path","import_uuid","DEFAULT_IDS_HOST","IDS_HOST","gotClient","got","error","retryCount","IdsToolbox","actionOptions","makeOptionsConfident","package_default","params","target","env","value","identify","getArchOs","getNixPlatform","constructSourceParameters","key","eventName","context","correlatedUrl","versionCheckup","v","cached","destFile","fetchStream","e","binaryPath","fs","p","fetchUrl","version","cleanedVersion","startCwd","tempDir","toolPath","batch","_tmpdir","uuidV4","idsProjectName","finalOpts","determineDiagnosticsUrl","urlOption","providedDiagnosticEndpoint","mungeDiagnosticEndpoint","diagnosticUrl","inputUrl","defaultIdsHost","currentIdsHost"]}